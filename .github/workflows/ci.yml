name: Run CI
on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          submodules: true

      - name: Use Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          check-latest: true
          node-version: 24.7.0

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          sudo apt install -y libimage-exiftool-perl

      - name: Build
        run: pnpm build

      - name: Check code style
        run: |
          pnpm fmt
          git --no-pager diff --exit-code

      - name: CI tests
        run: pnpm test

      - name: Upload build
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build
          include-hidden-files: true
          path: |
            .
            !node_modules
            !.git
            !cooklang/target
            !bootstrap/src/bootstrap

  upload:
    runs-on: ubuntu-latest
    needs: ci
    name: Upload
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Download build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: build
      - name: Write ssh key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/ssh-key
          chmod 600 ~/.ssh/ssh-key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Sync
        run: |
          # Make all directories
          ssh -i ~/.ssh/ssh-key -o StrictHostKeyChecking=accept-new "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST}}" "
            cd /var/www
            mkdir -p recipe-store
          "

          # rsync all relevant files
          rsync -vhaR --checksum --delete \
            -e "ssh -i ~/.ssh/ssh-key" \
            {backend,frontend,api,bootstrap,cooklang}/{dist/,package.json} \
            package.json pnpm-*.yaml \
            frontend/static/ frontend/src/base.html \
            "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST}}:/var/www/recipe-store/"

          ssh -i ~/.ssh/ssh-key "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST}}" /bin/bash << 'EOF'
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /var/www/recipe-store
            corepack prepare
            corepack enable
            pnpm install --prod
            cd ..
            pm2 start recipe-store.config.js > /dev/null
          EOF
      - run: rm ~/.ssh/ssh-key
        if: always()
